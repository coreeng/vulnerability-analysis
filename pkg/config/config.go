package config

import (
	"errors"
	"math"
	"os"

	log "github.com/sirupsen/logrus"

	"gopkg.in/yaml.v2"
)

// Config represents vulnerability thresholds that must be satisfied for the tool to return success code
type Config struct {
	Threshold *ThresholdConfig `yaml:"threshold"`
}

// ThresholdConfig represent values loaded from threshold configuration file
type ThresholdConfig struct {
	CriticalCount int `yaml:"criticalCount"`
	HighCount     int `yaml:"highCount"`
	MediumCount   int `yaml:"mediumCount"`
	LowCount      int `yaml:"lowCount"`
	UnknownCount  int `yaml:"unknownCount"`
}

// ReadConfig Load configuration file from filesystem
func ReadConfig(path string) (*Config, error) {
	fileContent, err := os.ReadFile(path)
	config := newConfig()
	if err != nil && errors.Is(err, os.ErrNotExist) {
		log.Warnf("could not find file '%s'. Using default values.", path)
		return config, nil
	} else if err != nil {
		return nil, err
	}

	if err = yaml.Unmarshal(fileContent, &config); err != nil {
		return nil, err
	}
	return config, nil
}

func newConfig() *Config {
	return &Config{
		Threshold: &ThresholdConfig{
			CriticalCount: 2,
			HighCount:     math.MaxInt64,
			MediumCount:   math.MaxInt64,
			LowCount:      math.MaxInt64,
			UnknownCount:  math.MaxInt64,
		},
	}
}
