FROM golang:1.22-bullseye AS build-stage

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Update packages
RUN apt-get update -y && apt-get upgrade -y && apt-get install unzip -y

# install kubelogin
RUN OS="$(uname | tr '[:upper:]' '[:lower:]')" && \
    ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" && \
    curl -L "https://github.com/Azure/kubelogin/releases/download/v0.0.30/kubelogin-${OS}-${ARCH}.zip" -o /tmp/kubelogin.zip && \
    unzip /tmp/kubelogin.zip -d /tmp/ && \
    mv /tmp/bin/linux_amd64/kubelogin /usr/bin/kubelogin && \
    chmod +x /usr/bin/kubelogin

WORKDIR /app

# Copy source and build the binary
COPY go.mod go.sum ./

RUN go mod download

COPY . ./

RUN CGO_ENABLED=0 GOOS=linux go build -o vulcheck ./cmd/vulnerability-analysis/main.go

# Deploy the application binary into a lean image
FROM gcr.io/distroless/base-debian11 AS build-release-stage

WORKDIR /

COPY --from=build-stage /app/vulcheck ./vulcheck
COPY --from=build-stage /usr/bin/kubelogin ./usr/bin/kubelogin

ENTRYPOINT ["./vulcheck"]
